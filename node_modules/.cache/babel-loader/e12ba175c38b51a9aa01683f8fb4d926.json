{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/dror/WebProjects/react/coreui-noco-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/dror/WebProjects/react/coreui-noco-front/src/views/dashboard/Dashboard.js\";\nimport React, { lazy, Component } from \"react\"; // TEST RELATED\n\nimport web3 from \"../../web3.js\";\nimport profileAbi from \"../../profile\";\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CRow, CForm, CFormGroup, CInput, CInputGroup, CInputGroupPrepend, CInputGroupText, CInputGroupAppend } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nvar playerOne = \"0x9725DE842eF075907DAc16a437705Be03A074a7F\"; // I make then 2 different variables as I try to make these 2 different scenarios detailed as possible.\n// In our frontend these 2 variables will be the same one\n\nvar address = playerOne; // For testing purposes only!\n\nvar playerTwo = \"0xb5a3863047234C83BF387EeE04CcaE572C60De4E\";\n\nvar compiledBinaryContract = require(\"../../solidity/build/BinaryContract.json\");\n\nvar profile = new web3.eth.Contract(profileAbi, playerOne); // **************************** */\n// const WidgetsDropdown = lazy(() => import(\"../widgets/WidgetsDropdown.js\"));\n// const WidgetsBrand = lazy(() => import(\"../widgets/WidgetsBrand.js\"));\n\nexport var Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _super.call(this, props);\n\n    _this.addFriendFormSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts, friendsProfile, makeBatchRequest;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                makeBatchRequest = function _makeBatchRequest(calls) {\n                  var batch = new web3.BatchRequest();\n                  calls.map(function (call) {\n                    return new Promise(function (res, rej) {\n                      var req = call.request({\n                        from: accounts[0],\n                        gas: \"1000000\"\n                      }, function (err, data) {\n                        if (err) rej(err);else res(data);\n                      });\n                      batch.add(req);\n                    });\n                  });\n                  batch.execute();\n                };\n\n                event.preventDefault(); // Getting accounts list\n\n                _context.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context.sent;\n                // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n                friendsProfile = new web3.eth.Contract(profileAbi, _this.state.friendsAddress); // NOTE: that's how I convert between a batch request and 2 seperate \"send\" requests:\n\n                makeBatchRequest([// add both of the exchanges in a batch request.\n                profile.methods.addFriendRequest(_this.state.friendsAddress).send, friendsProfile.methods.addFriendRequestNotRestricted(address).send]);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onCheckMyFriends = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault(); // console.log(\"your friends are:\");\n                // console.log(await profile.methods.getFriends().call());\n\n                _context2.t0 = _this;\n                _context2.next = 4;\n                return profile.methods.getFriends().call();\n\n              case 4:\n                _context2.t1 = _context2.sent;\n                _context2.t2 = {\n                  friendsList: _context2.t1\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t2);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onRemoveFriendsList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var accounts, friendsProfile, makeBatchRequest;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              makeBatchRequest = function _makeBatchRequest2(calls) {\n                var batch = new web3.BatchRequest();\n                console.log(accounts[0]);\n                calls.map(function (call) {\n                  return new Promise(function (res, rej) {\n                    var req = call.request({\n                      from: accounts[0],\n                      gas: \"1000000\"\n                    }, function (err, data) {\n                      if (err) rej(err);else res(data);\n                    });\n                    batch.add(req);\n                  });\n                });\n                batch.execute();\n              };\n\n              // event.preventDefault();\n              console.log(\"in onRemoveFriendsList\"); // Getting accounts list\n\n              _context3.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context3.sent;\n              // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friend's profile address\n              friendsProfile = new web3.eth.Contract(profileAbi, _this.state.friendsAddress);\n              makeBatchRequest([// remove both of the exchanges in a batch request.\n              profile.methods.removeAllFriends().send, friendsProfile.methods.removeAllFriends().send]);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this.onSubmitAddDebtRequest = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var accounts, friendsProfile, makeBatchRequest;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                makeBatchRequest = function _makeBatchRequest3(calls) {\n                  var batch = new web3.BatchRequest(); // let promises = calls.map(call => {\n\n                  calls.map(function (call) {\n                    return new Promise(function (res, rej) {\n                      var req = call.request({\n                        from: accounts[0],\n                        gas: \"1000000\"\n                      }, function (err, data) {\n                        if (err) rej(err);else res(data);\n                      });\n                      batch.add(req);\n                    });\n                  });\n                  batch.execute();\n                };\n\n                event.preventDefault(); // Getting accounts list\n\n                _context4.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context4.sent;\n                // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n                friendsProfile = new web3.eth.Contract(profileAbi, _this.state.playerTwo);\n                makeBatchRequest([// add both of the exchanges in a batch request.\n                // the difference: addDebtRequest(destination, same other args), addDebtRequestNotRestricted(source, same other args)\n                profile.methods.addDebtRequest(_this.state.playerTwo, _this.state.playerOne, _this.state.providedAmount, _this.state.playerTwo).send, friendsProfile.methods.addDebtRequestNotRestricted(_this.state.playerOne, _this.state.playerOne, _this.state.providedAmount, _this.state.playerTwo).send]);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.onSubmitConfirmDebtRequest = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(event) {\n        var accounts, myExchanges, choosenRequest, myContracts, existedContractAddress, deployedContractAddress, contractExisted, i, _currentBinaryContract, currentDebtOfCurrentBinaryContract, accountsOfTransaction, currentBinaryContractAddress, currentBinaryContract, friendsProfile, newContractAddress, makeBatchRequest;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                makeBatchRequest = function _makeBatchRequest4(calls) {\n                  var batch = new web3.BatchRequest(); // let promises = calls.map(call => {\n\n                  calls.map(function (call) {\n                    return new Promise(function (res, rej) {\n                      var req = call.request({\n                        from: accounts[0],\n                        gas: \"2000000\"\n                      }, function (err, data) {\n                        if (err) rej(err);else res(data);\n                      });\n                      batch.add(req);\n                    });\n                  });\n                  batch.execute();\n                };\n\n                event.preventDefault(); // Getting accounts list\n\n                _context5.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context5.sent;\n                _context5.next = 7;\n                return profile.methods.getAllExchanges().call();\n\n              case 7:\n                myExchanges = _context5.sent;\n                choosenRequest = myExchanges[0]; // TODO: I use myExchanges[0] for testing only! The user will pick the correct one\n\n                _this.setState({\n                  playerTwo: choosenRequest.transaction.from\n                });\n\n                _this.setState({\n                  playerOne: choosenRequest.transaction.to\n                });\n\n                _this.setState({\n                  providedAmount: choosenRequest.transaction.amount\n                });\n\n                _context5.next = 14;\n                return profile.methods.getContracts().call();\n\n              case 14:\n                myContracts = _context5.sent;\n                contractExisted = false;\n                i = 0;\n\n              case 17:\n                if (!(i < myContracts.length)) {\n                  _context5.next = 33;\n                  break;\n                }\n\n                _context5.next = 20;\n                return new web3.eth.Contract(JSON.parse(compiledBinaryContract.interface), existedContractAddress = myContracts[i]);\n\n              case 20:\n                _currentBinaryContract = _context5.sent;\n                _context5.next = 23;\n                return _currentBinaryContract.methods.getCurrentDebt().call();\n\n              case 23:\n                currentDebtOfCurrentBinaryContract = _context5.sent;\n                accountsOfTransaction = [_this.state.playerOne, _this.state.playerTwo];\n\n                if (!(accountsOfTransaction.includes(String(currentDebtOfCurrentBinaryContract.debtor)) && accountsOfTransaction.includes(String(currentDebtOfCurrentBinaryContract.creditor)))) {\n                  _context5.next = 30;\n                  break;\n                }\n\n                _context5.next = 28;\n                return _currentBinaryContract.methods.addTransaction(_this.state.playerOne, _this.state.providedAmount, _this.state.playerTwo).send({\n                  from: accounts[0],\n                  gas: \"2000000\"\n                });\n\n              case 28:\n                contractExisted = true;\n                return _context5.abrupt(\"break\", 33);\n\n              case 30:\n                i++;\n                _context5.next = 17;\n                break;\n\n              case 33:\n                if (contractExisted) {\n                  _context5.next = 40;\n                  break;\n                }\n\n                _context5.next = 36;\n                return profile.methods.createBinaryContract(_this.state.playerOne, _this.state.providedAmount, _this.state.playerTwo).send({\n                  from: accounts[0],\n                  gas: \"4000000\"\n                });\n\n              case 36:\n                console.log(\"Binary contract was created successfully!\");\n                _context5.next = 39;\n                return profile.methods.getLastContract().call();\n\n              case 39:\n                deployedContractAddress = _context5.sent;\n\n              case 40:\n                currentBinaryContractAddress = contractExisted ? existedContractAddress : deployedContractAddress;\n                _context5.next = 43;\n                return new web3.eth.Contract(JSON.parse(compiledBinaryContract.interface), currentBinaryContractAddress);\n\n              case 43:\n                currentBinaryContract = _context5.sent;\n                friendsProfile = new web3.eth.Contract(profileAbi, _this.state.playerTwo); // we assign a zeroAddress if the contract already existed. Otherwise, the deployed contract address\n\n                if (!contractExisted) {\n                  _context5.next = 51;\n                  break;\n                }\n\n                _context5.next = 48;\n                return profile.methods.getZeroAddress().call();\n\n              case 48:\n                _context5.t0 = _context5.sent;\n                _context5.next = 52;\n                break;\n\n              case 51:\n                _context5.t0 = deployedContractAddress;\n\n              case 52:\n                newContractAddress = _context5.t0;\n                makeBatchRequest([// remove both of the exchanges in a batch request.\n                // We call this method in order to remove our exchange on the profile (solidity)\n                // TODO: when implementing it with the actual frontend, we should send the actual index instead of \"0\"\n                profile.methods.confirmDebtRequest(0).send, // We call this method in order to remove friend's exchange (solidity method)\n                // TODO: when implementing it with the actual frontend, we should send the actual index instead of \"0\"\n                friendsProfile.methods.confirmDebtRequestNotRestricted(0, newContractAddress).send]);\n\n              case 54:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.onCheckMyExchanges = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(event) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"your exchanges are:\");\n                _context6.t0 = console;\n                _context6.next = 5;\n                return profile.methods.getAllExchanges().call();\n\n              case 5:\n                _context6.t1 = _context6.sent;\n\n                _context6.t0.log.call(_context6.t0, _context6.t1);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.onCheckMyContracts = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(event) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"your contracts are:\");\n                _context7.t0 = console;\n                _context7.next = 5;\n                return profile.methods.getContracts().call();\n\n              case 5:\n                _context7.t1 = _context7.sent;\n\n                _context7.t0.log.call(_context7.t0, _context7.t1);\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.onRemoveExchangesList = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(event) {\n        var accounts, friendsProfile, makeBatchRequest;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                makeBatchRequest = function _makeBatchRequest5(calls) {\n                  var batch = new web3.BatchRequest();\n                  calls.map(function (call) {\n                    return new Promise(function (res, rej) {\n                      var req = call.request({\n                        from: accounts[0],\n                        gas: \"2000000\"\n                      }, function (err, data) {\n                        if (err) rej(err);else res(data);\n                      });\n                      batch.add(req);\n                    });\n                  });\n                  batch.execute();\n                };\n\n                event.preventDefault(); // Getting accounts list\n\n                _context8.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context8.sent;\n                // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us playerTwo's address\n                friendsProfile = new web3.eth.Contract(profileAbi, _this.state.playerTwo);\n                makeBatchRequest([// remove both of the exchanges in a batch request.\n                profile.methods.removeAllExchanges().send, friendsProfile.methods.removeAllExchanges().send]);\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x7) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChangeFriendRequestIndex = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        friendRequestIndex: event.target.value\n      });\n    };\n\n    _this.handleChangePlayerOne = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        playerOne: event.target.value\n      });\n    };\n\n    _this.handleChangeProvidedAmount = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        providedAmount: event.target.value\n      });\n    };\n\n    _this.handleChangePlayerTwo = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        playerTwo: event.target.value\n      });\n    };\n\n    _this.state = {\n      friendsAddress: playerTwo,\n      friendRequestIndex: \"\",\n      playerOne: \"\",\n      providedAmount: \"\",\n      playerTwo: \"\",\n      friendsList: []\n    };\n    _this.addFriendInputChange = _this.addFriendInputChange.bind(_assertThisInitialized(_this));\n    _this.addFriendFormSubmit = _this.addFriendFormSubmit.bind(_assertThisInitialized(_this));\n    _this.onSubmitConfirmFriendRequest = _this.onSubmitConfirmFriendRequest.bind(_assertThisInitialized(_this));\n    _this.onCheckMyFriends = _this.onCheckMyFriends.bind(_assertThisInitialized(_this));\n    _this.onRemoveFriendsList = _this.onRemoveFriendsList.bind(_assertThisInitialized(_this));\n    _this.updateRemovedFriends = _this.updateRemovedFriends.bind(_assertThisInitialized(_this));\n    _this.onSubmitAddDebtRequest = _this.onSubmitAddDebtRequest.bind(_assertThisInitialized(_this));\n    _this.onSubmitConfirmDebtRequest = _this.onSubmitConfirmDebtRequest.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var ethereum;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                console.log(this.state.friendsList);\n                ethereum = window.ethereum;\n\n                if (!(typeof ethereum !== \"undefined\")) {\n                  _context9.next = 5;\n                  break;\n                }\n\n                _context9.next = 5;\n                return ethereum.enable();\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() // *****************************************************\n    //                  ADD FRIEND\n    // *****************************************************\n\n  }, {\n    key: \"onSubmitConfirmFriendRequest\",\n    // *****************************************************\n    //                  CONFIRM FRIEND\n    // *****************************************************\n    value: function () {\n      var _onSubmitConfirmFriendRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(event) {\n        var accounts, friendsProfile, friendExchanges, friendRequestIndex, index, friendExchange, makeBatchRequest;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                makeBatchRequest = function _makeBatchRequest6(calls) {\n                  var batch = new web3.BatchRequest();\n                  calls.map(function (call) {\n                    return new Promise(function (res, rej) {\n                      var req = call.request({\n                        from: accounts[0],\n                        gas: \"1000000\"\n                      }, function (err, data) {\n                        if (err) rej(err);else res(data);\n                      });\n                      batch.add(req);\n                    });\n                  });\n                  batch.execute();\n                };\n\n                event.preventDefault(); // Getting accounts list\n\n                _context10.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context10.sent;\n                // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n                friendsProfile = new web3.eth.Contract(profileAbi, this.state.friendsAddress); //Finding friend's exchange index:\n\n                _context10.next = 8;\n                return friendsProfile.methods.getAllExchanges().call();\n\n              case 8:\n                friendExchanges = _context10.sent;\n\n                for (index = 0; index < friendExchanges.length; index++) {\n                  friendExchange = friendExchanges[index]; //\"0\" represents addFriendRequest Enum\n\n                  if ( // if it is a friendRequest and the source is my friend\n                  friendExchange.exchangePurpose === \"0\" && friendExchange.exchangeDetails.source === this.state.friendsAddress) {\n                    friendRequestIndex = index;\n                  }\n                }\n\n                makeBatchRequest([// add both of the exchanges in a batch request.\n                // In our frontend the user will choose the correct request, here I test it with 0 as there is only one request\n                profile.methods.confirmFriendRequest(0).send, friendsProfile.methods.confirmFriendRequestNotRestricted(friendRequestIndex).send]);\n\n              case 11:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function onSubmitConfirmFriendRequest(_x8) {\n        return _onSubmitConfirmFriendRequest.apply(this, arguments);\n      }\n\n      return onSubmitConfirmFriendRequest;\n    }() // *****************************************************\n    //                  GET FRIENDS\n    // *****************************************************\n\n  }, {\n    key: \"updateRemovedFriends\",\n    // *****************************************************\n    //                  REMOVE FRIENDS\n    // *****************************************************\n    value: function () {\n      var _updateRemovedFriends = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                console.log(\"in remove friends\");\n                _context11.t0 = Promise.resolve(this.onRemoveFriendsList());\n                _context11.t1 = this;\n                _context11.next = 5;\n                return profile.methods.getFriends().call();\n\n              case 5:\n                _context11.t2 = _context11.sent;\n                _context11.t3 = {\n                  friendsList: _context11.t2\n                };\n                _context11.t4 = _context11.t1.setState.call(_context11.t1, _context11.t3);\n\n                _context11.t0.then.call(_context11.t0, _context11.t4);\n\n              case 9:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function updateRemovedFriends() {\n        return _updateRemovedFriends.apply(this, arguments);\n      }\n\n      return updateRemovedFriends;\n    }()\n  }, {\n    key: \"addFriendInputChange\",\n    // *****************************************************\n    //                  FORM CHANGE HANDLERS\n    // *****************************************************\n    value: function addFriendInputChange(event) {\n      event.preventDefault();\n      this.setState({\n        friendsAddress: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    // *****************************************************\n    //                       RENDER\n    // *****************************************************\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CRow, {\n          children: [/*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: /*#__PURE__*/_jsxDEV(CForm, {\n                action: \"\",\n                method: \"post\",\n                className: \"form-horizontal\",\n                onSubmit: this.addFriendFormSubmit,\n                children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                  children: \"Add Friend\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    row: true,\n                    children: /*#__PURE__*/_jsxDEV(CCol, {\n                      md: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(CInputGroupPrepend, {\n                          children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                            children: /*#__PURE__*/_jsxDEV(CIcon, {\n                              name: \"cil-user\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 533,\n                              columnNumber: 29\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 532,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 531,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(CInput, {\n                          id: \"input1-group1\",\n                          name: \"input1-group1\",\n                          placeholder: \"Username\",\n                          value: this.state.friendsAddress,\n                          onChange: this.addFriendInputChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 536,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n                  children: [/*#__PURE__*/_jsxDEV(CButton, {\n                    type: \"submit\",\n                    size: \"sm\",\n                    color: \"success\",\n                    children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                      name: \"cil-scrubber\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 21\n                    }, this), \" Submit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                    type: \"reset\",\n                    size: \"sm\",\n                    color: \"danger\",\n                    children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                      name: \"cil-ban\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 21\n                    }, this), \" Reset\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: /*#__PURE__*/_jsxDEV(CForm, {\n                action: \"\",\n                method: \"post\",\n                className: \"form-horizontal\",\n                onSubmit: this.onSubmitConfirmFriendRequest,\n                children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                  children: \"Confirm Friend\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    row: true,\n                    children: /*#__PURE__*/_jsxDEV(CCol, {\n                      md: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                        children: [/*#__PURE__*/_jsxDEV(CInputGroupPrepend, {\n                          children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                            children: /*#__PURE__*/_jsxDEV(CIcon, {\n                              name: \"cil-user\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 573,\n                              columnNumber: 29\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 572,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 571,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(CInput, {\n                          id: \"input2-group2\",\n                          name: \"input2-group2\",\n                          placeholder: \"Confirmation\",\n                          value: this.state.friendsAddress,\n                          onChange: this.addFriendInputChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 576,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 569,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n                  children: [/*#__PURE__*/_jsxDEV(CButton, {\n                    type: \"submit\",\n                    size: \"sm\",\n                    color: \"success\",\n                    children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                      name: \"cil-scrubber\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 21\n                    }, this), \" Submit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                    type: \"reset\",\n                    size: \"sm\",\n                    color: \"danger\",\n                    children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                      name: \"cil-ban\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 21\n                    }, this), \" Reset\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CRow, {\n          children: /*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            md: \"6\",\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                children: \"Friends List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-hover table-outline mb-0 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"thead-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Friends Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 608,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Friends Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 609,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 607,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: this.state.friendsList.map(function (friend) {\n                        return /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: friend\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 616,\n                              columnNumber: 29\n                            }, _this2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 615,\n                            columnNumber: 27\n                          }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: \"friend name\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 619,\n                              columnNumber: 29\n                            }, _this2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 618,\n                            columnNumber: 27\n                          }, _this2)]\n                        }, friend, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 614,\n                          columnNumber: 25\n                        }, _this2);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n                children: [/*#__PURE__*/_jsxDEV(CButton, {\n                  type: \"button\",\n                  size: \"sm\",\n                  color: \"success\",\n                  onClick: this.onCheckMyFriends,\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 19\n                  }, this), \" Check Friends\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                  type: \"button\",\n                  size: \"sm\",\n                  color: \"danger\",\n                  onClick: this.updateRemovedFriends,\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-user-unfollow\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 19\n                  }, this), \" Remove Friends\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CRow, {\n          children: [/*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            sm: \"4\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                children: \"Send Debt Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                children: /*#__PURE__*/_jsxDEV(CForm, {\n                  action: \"\",\n                  method: \"post\",\n                  onSubmit: this.onSubmitAddDebtRequest,\n                  children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInput, {\n                        id: \"fromDebtRequest\",\n                        name: \"fromDebtRequest\",\n                        placeholder: \"From\",\n                        autoComplete: \"name\",\n                        value: address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(CIcon, {\n                            name: \"cil-user\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 669,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 668,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 667,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 659,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInput, {\n                        id: \"toDebtRequest\",\n                        name: \"toDebtRequest\",\n                        placeholder: \"To\",\n                        autoComplete: \"To\",\n                        value: this.state.friendsAddress\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 676,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(CIcon, {\n                            name: \"cil-user\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 685,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 684,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 683,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInput, {\n                        id: \"amountDebt\",\n                        name: \"amountDebt\",\n                        placeholder: \"Amount\",\n                        autoComplete: \"amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 692,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(CIcon, {\n                            name: \"cil-dollar\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 700,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 699,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 691,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    className: \"form-actions\",\n                    children: /*#__PURE__*/_jsxDEV(CButton, {\n                      type: \"submit\",\n                      size: \"sm\",\n                      color: \"secondary\",\n                      children: \"Send a Debt Request\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 706,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            sm: \"4\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                children: \"Confirm Debt Request\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                children: /*#__PURE__*/_jsxDEV(CForm, {\n                  action: \"\",\n                  method: \"post\",\n                  onSubmit: this.onSubmitConfirmDebtRequest,\n                  children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInput, {\n                        id: \"fromConfirm\",\n                        name: \"fromConfirm\",\n                        placeholder: \"from\",\n                        autoComplete: \"From\",\n                        value: this.state.friendsAddress\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 725,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(CIcon, {\n                            name: \"cil-user\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 734,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 733,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 732,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 724,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInput, {\n                        id: \"toConfirm\",\n                        name: \"toConfirm\",\n                        placeholder: \"To\",\n                        autoComplete: \"to\",\n                        value: address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 741,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(CIcon, {\n                            name: \"cil-user\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 750,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 749,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 748,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    children: /*#__PURE__*/_jsxDEV(CInputGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CInput, {\n                        id: \"amount\",\n                        name: \"amount\",\n                        placeholder: \"Amount\",\n                        autoComplete: \"amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 757,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                        children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                          children: /*#__PURE__*/_jsxDEV(CIcon, {\n                            name: \"cil-dollar\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 765,\n                            columnNumber: 27\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 764,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 763,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 756,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                    className: \"form-actions\",\n                    children: /*#__PURE__*/_jsxDEV(CButton, {\n                      type: \"submit\",\n                      size: \"sm\",\n                      color: \"secondary\",\n                      children: \"Confirm a Debt Request\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CRow, {\n          children: [/*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            md: \"6\",\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                children: \"Contracts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-hover table-outline mb-0 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"thead-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Friends Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 789,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Friends Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 790,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 788,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 787,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: this.state.friendsList.map(function (friend) {\n                        return /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: friend\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 797,\n                              columnNumber: 29\n                            }, _this2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 796,\n                            columnNumber: 27\n                          }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: \"friend name\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 800,\n                              columnNumber: 29\n                            }, _this2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 799,\n                            columnNumber: 27\n                          }, _this2)]\n                        }, friend, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 795,\n                          columnNumber: 25\n                        }, _this2);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n                children: [/*#__PURE__*/_jsxDEV(CButton, {\n                  type: \"button\",\n                  size: \"sm\",\n                  color: \"success\",\n                  onClick: this.onCheckMyFriends,\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 19\n                  }, this), \" Check Friends\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                  type: \"button\",\n                  size: \"sm\",\n                  color: \"danger\",\n                  onClick: this.updateRemovedFriends,\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-user-unfollow\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 19\n                  }, this), \" Remove Friends\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CCol, {\n            xs: \"12\",\n            md: \"6\",\n            xl: \"6\",\n            children: /*#__PURE__*/_jsxDEV(CCard, {\n              children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                children: \"Exchanges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table table-hover table-outline mb-0 \",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"thead-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Friends Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 836,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Friends Name\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 837,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 835,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 834,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: this.state.friendsList.map(function (friend) {\n                        return /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: friend\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 844,\n                              columnNumber: 29\n                            }, _this2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 843,\n                            columnNumber: 27\n                          }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: \"friend name\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 847,\n                              columnNumber: 29\n                            }, _this2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 846,\n                            columnNumber: 27\n                          }, _this2)]\n                        }, friend, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 842,\n                          columnNumber: 25\n                        }, _this2);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n                children: [/*#__PURE__*/_jsxDEV(CButton, {\n                  type: \"button\",\n                  size: \"sm\",\n                  color: \"success\",\n                  onClick: this.onCheckMyFriends,\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 19\n                  }, this), \" Check Friends\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                  type: \"button\",\n                  size: \"sm\",\n                  color: \"danger\",\n                  onClick: this.updateRemovedFriends,\n                  children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                    name: \"cil-user-unfollow\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 19\n                  }, this), \" Remove Friends\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\nexport default Dashboard;","map":{"version":3,"sources":["/home/dror/WebProjects/react/coreui-noco-front/src/views/dashboard/Dashboard.js"],"names":["React","lazy","Component","web3","profileAbi","CButton","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CRow","CForm","CFormGroup","CInput","CInputGroup","CInputGroupPrepend","CInputGroupText","CInputGroupAppend","CIcon","playerOne","address","playerTwo","compiledBinaryContract","require","profile","eth","Contract","Dashboard","props","addFriendFormSubmit","event","makeBatchRequest","calls","batch","BatchRequest","map","call","Promise","res","rej","req","request","from","accounts","gas","err","data","add","execute","preventDefault","getAccounts","friendsProfile","state","friendsAddress","methods","addFriendRequest","send","addFriendRequestNotRestricted","onCheckMyFriends","getFriends","friendsList","setState","onRemoveFriendsList","console","log","removeAllFriends","onSubmitAddDebtRequest","addDebtRequest","providedAmount","addDebtRequestNotRestricted","onSubmitConfirmDebtRequest","getAllExchanges","myExchanges","choosenRequest","transaction","to","amount","getContracts","myContracts","contractExisted","i","length","JSON","parse","interface","existedContractAddress","currentBinaryContract","getCurrentDebt","currentDebtOfCurrentBinaryContract","accountsOfTransaction","includes","String","debtor","creditor","addTransaction","createBinaryContract","getLastContract","deployedContractAddress","currentBinaryContractAddress","getZeroAddress","newContractAddress","confirmDebtRequest","confirmDebtRequestNotRestricted","onCheckMyExchanges","onCheckMyContracts","onRemoveExchangesList","removeAllExchanges","handleChangeFriendRequestIndex","friendRequestIndex","target","value","handleChangePlayerOne","handleChangeProvidedAmount","handleChangePlayerTwo","addFriendInputChange","bind","onSubmitConfirmFriendRequest","updateRemovedFriends","ethereum","window","enable","friendExchanges","index","friendExchange","exchangePurpose","exchangeDetails","source","confirmFriendRequest","confirmFriendRequestNotRestricted","resolve","then","friend"],"mappings":"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","sourcesContent":["import React, { lazy, Component } from \"react\";\n\n// TEST RELATED\nimport web3 from \"../../web3.js\";\nimport profileAbi from \"../../profile\";\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormGroup,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CInputGroupAppend,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst playerOne = \"0x9725DE842eF075907DAc16a437705Be03A074a7F\";\n\n// I make then 2 different variables as I try to make these 2 different scenarios detailed as possible.\n// In our frontend these 2 variables will be the same one\nconst address = playerOne;\n\n// For testing purposes only!\nconst playerTwo = \"0xb5a3863047234C83BF387EeE04CcaE572C60De4E\";\n\nconst compiledBinaryContract = require(\"../../solidity/build/BinaryContract.json\");\n\nconst profile = new web3.eth.Contract(profileAbi, playerOne);\n// **************************** */\n\n// const WidgetsDropdown = lazy(() => import(\"../widgets/WidgetsDropdown.js\"));\n// const WidgetsBrand = lazy(() => import(\"../widgets/WidgetsBrand.js\"));\n\nexport class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friendsAddress: playerTwo,\n      friendRequestIndex: \"\",\n      playerOne: \"\",\n      providedAmount: \"\",\n      playerTwo: \"\",\n      friendsList: [],\n    };\n\n    this.addFriendInputChange = this.addFriendInputChange.bind(this);\n    this.addFriendFormSubmit = this.addFriendFormSubmit.bind(this);\n    this.onSubmitConfirmFriendRequest = this.onSubmitConfirmFriendRequest.bind(\n      this\n    );\n    this.onCheckMyFriends = this.onCheckMyFriends.bind(this);\n    this.onRemoveFriendsList = this.onRemoveFriendsList.bind(this);\n    this.updateRemovedFriends = this.updateRemovedFriends.bind(this);\n    this.onSubmitAddDebtRequest = this.onSubmitAddDebtRequest.bind(this);\n    this.onSubmitConfirmDebtRequest = this.onSubmitConfirmDebtRequest.bind(\n      this\n    );\n  }\n\n  async componentDidMount() {\n    console.log(this.state.friendsList);\n    let ethereum = window.ethereum;\n    if (typeof ethereum !== \"undefined\") {\n      await ethereum.enable();\n    }\n  }\n\n  // *****************************************************\n  //                  ADD FRIEND\n  // *****************************************************\n  addFriendFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n    // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n    const friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.state.friendsAddress\n    );\n\n    // NOTE: that's how I convert between a batch request and 2 seperate \"send\" requests:\n\n    makeBatchRequest([\n      // add both of the exchanges in a batch request.\n      profile.methods.addFriendRequest(this.state.friendsAddress).send,\n      friendsProfile.methods.addFriendRequestNotRestricted(address).send,\n    ]);\n    function makeBatchRequest(calls) {\n      let batch = new web3.BatchRequest();\n      calls.map((call) => {\n        return new Promise((res, rej) => {\n          let req = call.request(\n            { from: accounts[0], gas: \"1000000\" },\n            (err, data) => {\n              if (err) rej(err);\n              else res(data);\n            }\n          );\n          batch.add(req);\n        });\n      });\n      batch.execute();\n    }\n  };\n\n  // *****************************************************\n  //                  CONFIRM FRIEND\n  // *****************************************************\n  async onSubmitConfirmFriendRequest(event) {\n    event.preventDefault();\n\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n\n    // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n    const friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.state.friendsAddress\n    );\n\n    //Finding friend's exchange index:\n    let friendExchanges = await friendsProfile.methods.getAllExchanges().call();\n\n    let friendRequestIndex;\n\n    for (let index = 0; index < friendExchanges.length; index++) {\n      const friendExchange = friendExchanges[index];\n\n      //\"0\" represents addFriendRequest Enum\n      if (\n        // if it is a friendRequest and the source is my friend\n        friendExchange.exchangePurpose === \"0\" &&\n        friendExchange.exchangeDetails.source === this.state.friendsAddress\n      ) {\n        friendRequestIndex = index;\n      }\n    }\n\n    makeBatchRequest([\n      // add both of the exchanges in a batch request.\n\n      // In our frontend the user will choose the correct request, here I test it with 0 as there is only one request\n      profile.methods.confirmFriendRequest(0).send,\n      friendsProfile.methods.confirmFriendRequestNotRestricted(\n        friendRequestIndex\n      ).send,\n    ]);\n    function makeBatchRequest(calls) {\n      let batch = new web3.BatchRequest();\n\n      calls.map((call) => {\n        return new Promise((res, rej) => {\n          let req = call.request(\n            { from: accounts[0], gas: \"1000000\" },\n            (err, data) => {\n              if (err) rej(err);\n              else res(data);\n            }\n          );\n          batch.add(req);\n        });\n      });\n      batch.execute();\n    }\n  }\n  // *****************************************************\n  //                  GET FRIENDS\n  // *****************************************************\n\n  onCheckMyFriends = async (event) => {\n    event.preventDefault();\n    // console.log(\"your friends are:\");\n    // console.log(await profile.methods.getFriends().call());\n    this.setState({ friendsList: await profile.methods.getFriends().call() });\n    // console.log(this.state.friendsList);\n  };\n\n  // *****************************************************\n  //                  REMOVE FRIENDS\n  // *****************************************************\n  async updateRemovedFriends() {\n    console.log(\"in remove friends\");\n    Promise.resolve(this.onRemoveFriendsList()).then(\n      this.setState({ friendsList: await profile.methods.getFriends().call() })\n      // this.setState({\n      //   ...this.state,\n      //   friendsList: {\n      //     ...this.state.friendsList,\n      //     [address]: await profile.methods.getFriends().call(),\n      //   },\n      // })\n    );\n  }\n  onRemoveFriendsList = async () => {\n    // event.preventDefault();\n    console.log(\"in onRemoveFriendsList\");\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n\n    // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friend's profile address\n    const friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.state.friendsAddress\n    );\n\n    makeBatchRequest([\n      // remove both of the exchanges in a batch request.\n      profile.methods.removeAllFriends().send,\n      friendsProfile.methods.removeAllFriends().send,\n    ]);\n    function makeBatchRequest(calls) {\n      let batch = new web3.BatchRequest();\n\n      console.log(accounts[0]);\n      calls.map((call) => {\n        return new Promise((res, rej) => {\n          let req = call.request(\n            { from: accounts[0], gas: \"1000000\" },\n            (err, data) => {\n              if (err) rej(err);\n              else res(data);\n            }\n          );\n          batch.add(req);\n        });\n      });\n      batch.execute();\n    }\n  };\n\n  // *****************************************************\n  //               BINARY_CONTRACT PART\n  // *****************************************************\n\n  // Add a debt request for both our exchanges and target exchanges\n  onSubmitAddDebtRequest = async (event) => {\n    event.preventDefault();\n\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n\n    // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us friendsProfile address\n    const friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.state.playerTwo\n    );\n\n    makeBatchRequest([\n      // add both of the exchanges in a batch request.\n      // the difference: addDebtRequest(destination, same other args), addDebtRequestNotRestricted(source, same other args)\n      profile.methods.addDebtRequest(\n        this.state.playerTwo,\n        this.state.playerOne,\n        this.state.providedAmount,\n        this.state.playerTwo\n      ).send,\n      friendsProfile.methods.addDebtRequestNotRestricted(\n        this.state.playerOne,\n        this.state.playerOne,\n        this.state.providedAmount,\n        this.state.playerTwo\n      ).send,\n    ]);\n    function makeBatchRequest(calls) {\n      let batch = new web3.BatchRequest();\n\n      // let promises = calls.map(call => {\n      calls.map((call) => {\n        return new Promise((res, rej) => {\n          let req = call.request(\n            { from: accounts[0], gas: \"1000000\" },\n            (err, data) => {\n              if (err) rej(err);\n              else res(data);\n            }\n          );\n          batch.add(req);\n        });\n      });\n      batch.execute();\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////\n\n  // Confirm a debt request for both our exchanges and target exchanges\n  onSubmitConfirmDebtRequest = async (event) => {\n    event.preventDefault();\n\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n\n    // Setting this.state.{playerOne, Two, amount} from the request details:\n    let myExchanges = await profile.methods.getAllExchanges().call();\n    let choosenRequest = myExchanges[0]; // TODO: I use myExchanges[0] for testing only! The user will pick the correct one\n\n    this.setState({ playerTwo: choosenRequest.transaction.from });\n    this.setState({ playerOne: choosenRequest.transaction.to });\n    this.setState({ providedAmount: choosenRequest.transaction.amount });\n\n    let myContracts = await profile.methods.getContracts().call();\n\n    let existedContractAddress; // if a contract will be deployed, we will use this variable. Otherwise, we will use deployedContractAddress\n    let deployedContractAddress;\n    let contractExisted = false;\n\n    for (var i = 0; i < myContracts.length; i++) {\n      // in this for loop we try to find if a contract exist, or we should create one\n      let currentBinaryContract = await new web3.eth.Contract(\n        JSON.parse(compiledBinaryContract.interface),\n        (existedContractAddress = myContracts[i])\n      );\n\n      let currentDebtOfCurrentBinaryContract = await currentBinaryContract.methods\n        .getCurrentDebt()\n        .call();\n      let accountsOfTransaction = [this.state.playerOne, this.state.playerTwo];\n\n      if (\n        accountsOfTransaction.includes(\n          String(currentDebtOfCurrentBinaryContract.debtor)\n        ) &&\n        accountsOfTransaction.includes(\n          String(currentDebtOfCurrentBinaryContract.creditor)\n        )\n      ) {\n        // it means that the contract already exist\n\n        await currentBinaryContract.methods\n          .addTransaction(\n            this.state.playerOne,\n            this.state.providedAmount,\n            this.state.playerTwo\n          )\n          .send({\n            from: accounts[0],\n            gas: \"2000000\",\n          });\n\n        contractExisted = true;\n\n        break;\n      }\n    } // end of for loop - now we know if the contract existed or not\n\n    if (!contractExisted) {\n      // deploy a binaryContract\n      await profile.methods\n        .createBinaryContract(\n          this.state.playerOne,\n          this.state.providedAmount,\n          this.state.playerTwo\n        )\n        .send({\n          from: accounts[0],\n          gas: \"4000000\",\n        });\n\n      console.log(\"Binary contract was created successfully!\");\n\n      deployedContractAddress = await profile.methods.getLastContract().call();\n    }\n\n    let currentBinaryContractAddress = contractExisted\n      ? existedContractAddress\n      : deployedContractAddress;\n    let currentBinaryContract = await new web3.eth.Contract(\n      JSON.parse(compiledBinaryContract.interface),\n      currentBinaryContractAddress\n    );\n\n    let friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.state.playerTwo\n    );\n\n    // we assign a zeroAddress if the contract already existed. Otherwise, the deployed contract address\n    let newContractAddress = contractExisted\n      ? await profile.methods.getZeroAddress().call()\n      : deployedContractAddress;\n\n    makeBatchRequest([\n      // remove both of the exchanges in a batch request.\n\n      // We call this method in order to remove our exchange on the profile (solidity)\n      // TODO: when implementing it with the actual frontend, we should send the actual index instead of \"0\"\n      profile.methods.confirmDebtRequest(0).send,\n\n      // We call this method in order to remove friend's exchange (solidity method)\n      // TODO: when implementing it with the actual frontend, we should send the actual index instead of \"0\"\n      friendsProfile.methods.confirmDebtRequestNotRestricted(\n        0,\n        newContractAddress\n      ).send,\n    ]);\n    function makeBatchRequest(calls) {\n      let batch = new web3.BatchRequest();\n\n      // let promises = calls.map(call => {\n      calls.map((call) => {\n        return new Promise((res, rej) => {\n          let req = call.request(\n            { from: accounts[0], gas: \"2000000\" },\n            (err, data) => {\n              if (err) rej(err);\n              else res(data);\n            }\n          );\n          batch.add(req);\n        });\n      });\n      batch.execute();\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////\n\n  // Getting my exchanges\n  onCheckMyExchanges = async (event) => {\n    event.preventDefault();\n\n    console.log(\"your exchanges are:\");\n    console.log(await profile.methods.getAllExchanges().call());\n  };\n  //////////////////////////////////////////////////////////////////////////////////////\n\n  // Getting my contracts\n  onCheckMyContracts = async (event) => {\n    event.preventDefault();\n\n    console.log(\"your contracts are:\");\n    console.log(await profile.methods.getContracts().call());\n  };\n  //////////////////////////////////////////////////////////////////////////////////////\n\n  // Remove Exchanges list for both our exchanges and friend exchanges\n  onRemoveExchangesList = async (event) => {\n    event.preventDefault();\n\n    // Getting accounts list\n    const accounts = await web3.eth.getAccounts();\n\n    // Getting a reference to a friendsProfile - NOTE: it will work only if the user provided us playerTwo's address\n    const friendsProfile = new web3.eth.Contract(\n      profileAbi,\n      this.state.playerTwo\n    );\n\n    makeBatchRequest([\n      // remove both of the exchanges in a batch request.\n      profile.methods.removeAllExchanges().send,\n      friendsProfile.methods.removeAllExchanges().send,\n    ]);\n    function makeBatchRequest(calls) {\n      let batch = new web3.BatchRequest();\n\n      calls.map((call) => {\n        return new Promise((res, rej) => {\n          let req = call.request(\n            { from: accounts[0], gas: \"2000000\" },\n            (err, data) => {\n              if (err) rej(err);\n              else res(data);\n            }\n          );\n          batch.add(req);\n        });\n      });\n      batch.execute();\n    }\n  };\n  // *****************************************************\n  //                  FORM CHANGE HANDLERS\n  // *****************************************************\n\n  addFriendInputChange(event) {\n    event.preventDefault();\n    this.setState({ friendsAddress: event.target.value });\n  }\n\n  handleChangeFriendRequestIndex = (event) => {\n    event.preventDefault();\n    this.setState({ friendRequestIndex: event.target.value });\n  };\n\n  handleChangePlayerOne = (event) => {\n    event.preventDefault();\n    this.setState({ playerOne: event.target.value });\n  };\n\n  handleChangeProvidedAmount = (event) => {\n    event.preventDefault();\n    this.setState({ providedAmount: event.target.value });\n  };\n\n  handleChangePlayerTwo = (event) => {\n    event.preventDefault();\n    this.setState({ playerTwo: event.target.value });\n  };\n\n  // *****************************************************\n  //                       RENDER\n  // *****************************************************\n\n  render() {\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\" md=\"4\">\n            <CCard>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                className=\"form-horizontal\"\n                onSubmit={this.addFriendFormSubmit}\n              >\n                <CCardHeader>Add Friend</CCardHeader>\n                <CCardBody>\n                  <CFormGroup row>\n                    <CCol md=\"12\">\n                      <CInputGroup>\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput\n                          id=\"input1-group1\"\n                          name=\"input1-group1\"\n                          placeholder=\"Username\"\n                          value={this.state.friendsAddress}\n                          onChange={this.addFriendInputChange}\n                        />\n                      </CInputGroup>\n                    </CCol>\n                  </CFormGroup>\n                </CCardBody>\n                <CCardFooter>\n                  <CButton type=\"submit\" size=\"sm\" color=\"success\">\n                    <CIcon name=\"cil-scrubber\" /> Submit\n                  </CButton>\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\">\n                    <CIcon name=\"cil-ban\" /> Reset\n                  </CButton>\n                </CCardFooter>\n              </CForm>\n            </CCard>\n          </CCol>\n          <CCol xs=\"12\" md=\"4\">\n            <CCard>\n              <CForm\n                action=\"\"\n                method=\"post\"\n                className=\"form-horizontal\"\n                onSubmit={this.onSubmitConfirmFriendRequest}\n              >\n                <CCardHeader>Confirm Friend</CCardHeader>\n                <CCardBody>\n                  <CFormGroup row>\n                    <CCol md=\"12\">\n                      <CInputGroup>\n                        <CInputGroupPrepend>\n                          <CInputGroupText>\n                            <CIcon name=\"cil-user\" />\n                          </CInputGroupText>\n                        </CInputGroupPrepend>\n                        <CInput\n                          id=\"input2-group2\"\n                          name=\"input2-group2\"\n                          placeholder=\"Confirmation\"\n                          value={this.state.friendsAddress}\n                          onChange={this.addFriendInputChange}\n                        />\n                      </CInputGroup>\n                    </CCol>\n                  </CFormGroup>\n                </CCardBody>\n                <CCardFooter>\n                  <CButton type=\"submit\" size=\"sm\" color=\"success\">\n                    <CIcon name=\"cil-scrubber\" /> Submit\n                  </CButton>\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\">\n                    <CIcon name=\"cil-ban\" /> Reset\n                  </CButton>\n                </CCardFooter>\n              </CForm>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol xs=\"12\" md=\"6\" xl=\"6\">\n            <CCard>\n              <CCardHeader>Friends List</CCardHeader>\n              <CCardBody>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-hover table-outline mb-0 \">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th>Friends Address</th>\n                        <th>Friends Name</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.friendsList.map((friend) => (\n                        <tr key={friend}>\n                          <td>\n                            <div>{friend}</div>\n                          </td>\n                          <td>\n                            <div>friend name</div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </CCardBody>\n              <CCardFooter>\n                <CButton\n                  type=\"button\"\n                  size=\"sm\"\n                  color=\"success\"\n                  onClick={this.onCheckMyFriends}\n                >\n                  <CIcon name=\"cil-user\" /> Check Friends\n                </CButton>\n                <CButton\n                  type=\"button\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.updateRemovedFriends}\n                >\n                  <CIcon name=\"cil-user-unfollow\" /> Remove Friends\n                </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol xs=\"12\" sm=\"4\">\n            <CCard>\n              <CCardHeader>Send Debt Request</CCardHeader>\n              <CCardBody>\n                <CForm\n                  action=\"\"\n                  method=\"post\"\n                  onSubmit={this.onSubmitAddDebtRequest}\n                >\n                  <CFormGroup>\n                    <CInputGroup>\n                      <CInput\n                        id=\"fromDebtRequest\"\n                        name=\"fromDebtRequest\"\n                        placeholder=\"From\"\n                        autoComplete=\"name\"\n                        value={address}\n                      />\n                      <CInputGroupAppend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupAppend>\n                    </CInputGroup>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CInputGroup>\n                      <CInput\n                        id=\"toDebtRequest\"\n                        name=\"toDebtRequest\"\n                        placeholder=\"To\"\n                        autoComplete=\"To\"\n                        value={this.state.friendsAddress}\n                      />\n                      <CInputGroupAppend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupAppend>\n                    </CInputGroup>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CInputGroup>\n                      <CInput\n                        id=\"amountDebt\"\n                        name=\"amountDebt\"\n                        placeholder=\"Amount\"\n                        autoComplete=\"amount\"\n                      />\n                      <CInputGroupAppend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-dollar\" />\n                        </CInputGroupText>\n                      </CInputGroupAppend>\n                    </CInputGroup>\n                  </CFormGroup>\n                  <CFormGroup className=\"form-actions\">\n                    <CButton type=\"submit\" size=\"sm\" color=\"secondary\">\n                      Send a Debt Request\n                    </CButton>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs=\"12\" sm=\"4\">\n            <CCard>\n              <CCardHeader>Confirm Debt Request</CCardHeader>\n              <CCardBody>\n                <CForm\n                  action=\"\"\n                  method=\"post\"\n                  onSubmit={this.onSubmitConfirmDebtRequest}\n                >\n                  <CFormGroup>\n                    <CInputGroup>\n                      <CInput\n                        id=\"fromConfirm\"\n                        name=\"fromConfirm\"\n                        placeholder=\"from\"\n                        autoComplete=\"From\"\n                        value={this.state.friendsAddress}\n                      />\n                      <CInputGroupAppend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupAppend>\n                    </CInputGroup>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CInputGroup>\n                      <CInput\n                        id=\"toConfirm\"\n                        name=\"toConfirm\"\n                        placeholder=\"To\"\n                        autoComplete=\"to\"\n                        value={address}\n                      />\n                      <CInputGroupAppend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupAppend>\n                    </CInputGroup>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CInputGroup>\n                      <CInput\n                        id=\"amount\"\n                        name=\"amount\"\n                        placeholder=\"Amount\"\n                        autoComplete=\"amount\"\n                      />\n                      <CInputGroupAppend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-dollar\" />\n                        </CInputGroupText>\n                      </CInputGroupAppend>\n                    </CInputGroup>\n                  </CFormGroup>\n                  <CFormGroup className=\"form-actions\">\n                    <CButton type=\"submit\" size=\"sm\" color=\"secondary\">\n                      Confirm a Debt Request\n                    </CButton>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol xs=\"12\" md=\"6\" xl=\"6\">\n            <CCard>\n              <CCardHeader>Contracts</CCardHeader>\n              <CCardBody>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-hover table-outline mb-0 \">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th>Friends Address</th>\n                        <th>Friends Name</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.friendsList.map((friend) => (\n                        <tr key={friend}>\n                          <td>\n                            <div>{friend}</div>\n                          </td>\n                          <td>\n                            <div>friend name</div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </CCardBody>\n              <CCardFooter>\n                <CButton\n                  type=\"button\"\n                  size=\"sm\"\n                  color=\"success\"\n                  onClick={this.onCheckMyFriends}\n                >\n                  <CIcon name=\"cil-user\" /> Check Friends\n                </CButton>\n                <CButton\n                  type=\"button\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.updateRemovedFriends}\n                >\n                  <CIcon name=\"cil-user-unfollow\" /> Remove Friends\n                </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n          <CCol xs=\"12\" md=\"6\" xl=\"6\">\n            <CCard>\n              <CCardHeader>Exchanges</CCardHeader>\n              <CCardBody>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-hover table-outline mb-0 \">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th>Friends Address</th>\n                        <th>Friends Name</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.friendsList.map((friend) => (\n                        <tr key={friend}>\n                          <td>\n                            <div>{friend}</div>\n                          </td>\n                          <td>\n                            <div>friend name</div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </CCardBody>\n              <CCardFooter>\n                <CButton\n                  type=\"button\"\n                  size=\"sm\"\n                  color=\"success\"\n                  onClick={this.onCheckMyFriends}\n                >\n                  <CIcon name=\"cil-user\" /> Check Friends\n                </CButton>\n                <CButton\n                  type=\"button\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={this.updateRemovedFriends}\n                >\n                  <CIcon name=\"cil-user-unfollow\" /> Remove Friends\n                </CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}